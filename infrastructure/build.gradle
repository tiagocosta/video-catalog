plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.tcs.catalog.infrastructure'

bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

//    implementation 'com.google.protobuf:protobuf-java:3.25.6'
    implementation 'com.google.guava:guava:33.4.0-jre'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    implementation('org.springframework.boot:spring-boot-starter-web'){
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')

    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')

    testImplementation('org.springframework.boot:spring-boot-testcontainers')
    testImplementation('org.testcontainers:junit-jupiter')

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    runtimeOnly('com.h2database:h2')
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/JacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}